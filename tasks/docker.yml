---

- name: Docker | Ensure docker is installed
  include_role: name=geerlingguy.docker
  when: not ale_skip_checks

- name: Docker | Install composer packages for production
  shell: |
      docker run --rm \
        --user $(id -u):$(id -g) \
        -v $(pwd):/app \
        -v ~/.ssh:/root/.ssh \
        -v /etc/passwd:/etc/passwd:ro \
        -v /etc/group:/etc/group:ro \
        -v ~/.composer:/composer \
        roquie/composer-parallel install -q -o -n --no-dev --ignore-platform-reqs
  when: ale_env.APP_ENV == 'production'
  args:
    chdir: "{{ ale_path }}"

- name: Docker | Install composer packages for development
  shell: |
    docker run --rm \
      --user $(id -u):$(id -g) \
      -v $(pwd):/app \
      -v ~/.ssh:/root/.ssh \
      -v /etc/passwd:/etc/passwd:ro \
      -v /etc/group:/etc/group:ro \
      -v ~/.composer:/composer \
      roquie/composer-parallel install -n -q --ignore-platform-reqs
  when: ale_env.APP_ENV != 'production'
  args:
    chdir: "{{ ale_path }}"

- name: Docker | Install npm dependencies
  shell: docker run --rm -v $(pwd):/usr/src/app -w /usr/src/app node:8 npm install
  args:
    chdir: "{{ ale_path }}"

- name: Docker | Build assets
  shell: docker run --rm -v $(pwd):/usr/src/app -w /usr/src/app node:8 npm run production
  when: ale_npm.install_packages and ale_npm.build
  args:
    chdir: "{{ ale_path }}"
